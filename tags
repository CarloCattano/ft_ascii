!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/carlo/dev/console/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
BLACK	demo.c	/^#define BLACK /;"	d	file:
BLACK	ftascii.h	/^#define   BLACK /;"	d
BLUE	demo.c	/^#define BLUE /;"	d	file:
BLUE	ftascii.h	/^#define   BLUE /;"	d
CLEAR	demo.c	/^#define CLEAR /;"	d	file:
CLEAR	ftascii.h	/^#define   CLEAR /;"	d
CYAN	demo.c	/^#define CYAN /;"	d	file:
GREEN	demo.c	/^#define GREEN /;"	d	file:
GREEN	ftascii.h	/^#define   GREEN /;"	d
MAGENTA	demo.c	/^#define MAGENTA /;"	d	file:
MAX_COL	demo.c	/^    int             MAX_COL;$/;"	m	struct:term_s	typeref:typename:int	file:
MAX_COL	ftascii.h	/^    int             MAX_COL;$/;"	m	struct:term_s	typeref:typename:int
MAX_ROW	demo.c	/^    int             MAX_ROW;$/;"	m	struct:term_s	typeref:typename:int	file:
MAX_ROW	ftascii.h	/^    int             MAX_ROW;$/;"	m	struct:term_s	typeref:typename:int
NOMOUSE	demo.c	/^#define NOMOUSE /;"	d	file:
NOMOUSE	ftascii.h	/^#define   NOMOUSE /;"	d
RED	demo.c	/^#define RED /;"	d	file:
RED	ftascii.h	/^#define   RED /;"	d
RST	demo.c	/^#define RST /;"	d	file:
RST	ftascii.h	/^#define   RST /;"	d
WHITE	demo.c	/^#define WHITE /;"	d	file:
WHITE	ftascii.h	/^#define   WHITE /;"	d
YELLOW	demo.c	/^#define YELLOW /;"	d	file:
YELLOW	ftascii.h	/^#define   YELLOW /;"	d
add_randomness_to_movement	demo.c	/^void add_randomness_to_movement(term_t *t)$/;"	f	typeref:typename:void
add_randomness_to_movement	utils.c	/^void add_randomness_to_movement(term_t *t)$/;"	f	typeref:typename:void
brushes	demo.c	/^    char             brushes[6];$/;"	m	struct:player_s	typeref:typename:char[6]	file:
brushes	ftascii.h	/^    char            brushes[6];$/;"	m	struct:player_s	typeref:typename:char[6]
buffer	demo.c	/^    char*           buffer;$/;"	m	struct:term_s	typeref:typename:char *	file:
buffer	ftascii.h	/^    char*           buffer;$/;"	m	struct:term_s	typeref:typename:char *
buffer_copy	demo.c	/^	char* 		 	buffer_copy;$/;"	m	struct:term_s	typeref:typename:char *	file:
buffer_copy	ftascii.h	/^	char* 		    buffer_copy;$/;"	m	struct:term_s	typeref:typename:char *
clear	demo.c	/^    int 			clear;$/;"	m	struct:term_s	typeref:typename:int	file:
clear	ftascii.h	/^    int 		    clear;$/;"	m	struct:term_s	typeref:typename:int
compare_val_in_buffers	demo.c	/^int compare_val_in_buffers(term_t *t, int i)$/;"	f	typeref:typename:int
compare_val_in_buffers	utils.c	/^int compare_val_in_buffers(term_t *t, int i)$/;"	f	typeref:typename:int
copy_last_buffer	utils.c	/^void copy_last_buffer(term_t *t)$/;"	f	typeref:typename:void
curr_brush	demo.c	/^    char             curr_brush;$/;"	m	struct:player_s	typeref:typename:char	file:
curr_brush	ftascii.h	/^    char            curr_brush;$/;"	m	struct:player_s	typeref:typename:char
draw	demo.c	/^void draw(term_t *t)$/;"	f	typeref:typename:void
draw	draw.c	/^void draw(term_t *t)$/;"	f	typeref:typename:void
draw_inside	demo.c	/^void draw_inside(term_t *t, int i)$/;"	f	typeref:typename:void
draw_player	demo.c	/^void draw_player(term_t *t)$/;"	f	typeref:typename:void
draw_player	draw.c	/^void draw_player(term_t *t, int i)$/;"	f	typeref:typename:void
dx	demo.c	/^    int              dx;$/;"	m	struct:player_s	typeref:typename:int	file:
dx	ftascii.h	/^    int             dx;$/;"	m	struct:player_s	typeref:typename:int
dy	demo.c	/^    int              dy;$/;"	m	struct:player_s	typeref:typename:int	file:
dy	ftascii.h	/^    int             dy;$/;"	m	struct:player_s	typeref:typename:int
frame	demo.c	/^	unsigned int    frame;$/;"	m	struct:term_s	typeref:typename:unsigned int	file:
frame	ftascii.h	/^	unsigned int    frame;$/;"	m	struct:term_s	typeref:typename:unsigned int
free_buffer	utils.c	/^void free_buffer(term_t *t)$/;"	f	typeref:typename:void
handleKeyPress	demo.c	/^void handleKeyPress(char key, term_t *t) {$/;"	f	typeref:typename:void
handleKeyPress	keyhooks.c	/^void handleKeyPress(char key, term_t *t) {$/;"	f	typeref:typename:void
handle_ctrl_c	demo.c	/^void handle_ctrl_c(int sig)$/;"	f	typeref:typename:void
handlectrl_c	keyhooks.c	/^void handlectrl_c(int sig)$/;"	f	typeref:typename:void
init_player	init.c	/^void init_player(term_t *t)$/;"	f	typeref:typename:void
init_term	init.c	/^void init_term(term_t *t)$/;"	f	typeref:typename:void
main	demo.c	/^int main(int ac, char *av[])$/;"	f	typeref:typename:int
main	main.c	/^int main(int ac, char *av[])$/;"	f	typeref:typename:int
move_player	demo.c	/^void move_player(term_t *t)$/;"	f	typeref:typename:void
move_player	player.c	/^void move_player(term_t *t)$/;"	f	typeref:typename:void
player	demo.c	/^    player_t 		player;$/;"	m	struct:term_s	typeref:typename:player_t	file:
player	ftascii.h	/^    player_t 	    player;$/;"	m	struct:term_s	typeref:typename:player_t
player_s	demo.c	/^typedef struct player_s$/;"	s	file:
player_s	ftascii.h	/^typedef struct player_s$/;"	s
player_t	demo.c	/^}   player_t;$/;"	t	typeref:struct:player_s	file:
player_t	ftascii.h	/^}   player_t;$/;"	t	typeref:struct:player_s
posx	demo.c	/^    int              posx;$/;"	m	struct:player_s	typeref:typename:int	file:
posx	ftascii.h	/^    int             posx;$/;"	m	struct:player_s	typeref:typename:int
posy	demo.c	/^    int              posy;$/;"	m	struct:player_s	typeref:typename:int	file:
posy	ftascii.h	/^    int             posy;$/;"	m	struct:player_s	typeref:typename:int
size	demo.c	/^    int             size;$/;"	m	struct:term_s	typeref:typename:int	file:
size	ftascii.h	/^    int             size;$/;"	m	struct:term_s	typeref:typename:int
store_initial_buffer	demo.c	/^void store_initial_buffer(term_t *t)$/;"	f	typeref:typename:void
term_s	demo.c	/^typedef struct term_s$/;"	s	file:
term_s	ftascii.h	/^typedef struct term_s$/;"	s
term_t	demo.c	/^}           term_t;$/;"	t	typeref:struct:term_s	file:
term_t	ftascii.h	/^}                   term_t;$/;"	t	typeref:struct:term_s
